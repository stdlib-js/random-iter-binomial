// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@v0.2.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/object-assign@esm/index.mjs";import{isPrimitive as o}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-probability@v0.2.0-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.0-esm/index.mjs";import{isPrimitive as m}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@v0.2.0-esm/index.mjs";import{isPrimitive as l}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.0-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-max@esm/index.mjs";import{factory as u}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-binomial@v0.1.0-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/symbol-iterator@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";function g(f,c,v){var b,x,y,w,P;if(!m(f))throw new TypeError(h("invalid argument. First argument must be a positive integer. Value: `%s`.",f));if(!o(c))throw new TypeError(h("invalid argument. Second argument must be a probability. Value: `%s`.",c));if(arguments.length>2){if(!d(v))throw new TypeError(h("invalid argument. Options argument must be an object. Value: `%s`.",v));if(b=r({},v),a(b,"iter")){if(!l(b.iter))throw new TypeError(h("invalid option. `%s` option must be a nonnegative integer. Option: `%s`.","iter",b.iter))}else b.iter=p;y=u(f,c,b),void 0===b.prng&&!1!==b.copy&&(b.state=y.state)}else y=u(f,c),b={iter:p,state:y.state};return P=0,e(x={},"next",L),e(x,"return",G),b&&b.prng?(e(x,"seed",null),e(x,"seedLength",null),s(x,"state",n(null),i),e(x,"stateLength",null),e(x,"byteLength",null)):(t(x,"seed",R),t(x,"seedLength",E),s(x,"state",O,F),t(x,"stateLength",T),t(x,"byteLength",V)),e(x,"PRNG",y.PRNG),j&&e(x,j,N),x;function L(){return P+=1,w||P>b.iter?{done:!0}:{value:y(),done:!1}}function G(e){return w=!0,arguments.length?{value:e,done:!0}:{done:!0}}function N(){return g(f,c,b)}function R(){return y.PRNG.seed}function E(){return y.PRNG.seedLength}function T(){return y.PRNG.stateLength}function V(){return y.PRNG.byteLength}function O(){return y.PRNG.state}function F(e){y.PRNG.state=e}}export{g as default};
//# sourceMappingURL=index.mjs.map
